---
// Import necessary components and types
import type { ItemGrid as Props } from '~/types';
import { Icon } from 'astro-icon/components';
import { twMerge } from 'tailwind-merge';
import Button from './Button.astro';

// Destructure the props passed to the component
const { items = [], defaultIcon = '', classes = {} } = Astro.props;

const {
  container: containerClass = '',
  panel: panelClass = '',
  title: titleClass = '',
  description: descriptionClass = '',
  icon: defaultIconClass = 'text-primary',
} = classes;
---


{
  items && (
    <div
      class={twMerge(
        `grid gap-8 gap-x-12 sm:gap-y-8`,
        containerClass
      )}
    >
      {items.map(({ title, description, icon, callToAction, classes: itemClasses = {}, url }) => (
        url ? (
          <a href={url} class={twMerge('relative flex flex-col h-full', panelClass, itemClasses?.panel)}>
            {(icon || defaultIcon) && (
              <Icon name={icon || defaultIcon} class={twMerge('mb-2 w-10 h-10', defaultIconClass, itemClasses?.icon)} />
            )}
            <div class={twMerge('text-xl font-bold', titleClass, itemClasses?.title)}>{title}</div>
            {description && (
              <p class={twMerge('text-muted mt-2 flex-grow', descriptionClass, itemClasses?.description)} set:html={description} />
            )}
            {callToAction && (
              <div class="mt-auto pt-4">
                <Button {...callToAction} class="w-full text-center justify-center" />
              </div>
            )}
          </a>
        ) : (
          <div class={twMerge('relative flex flex-col h-full', panelClass, itemClasses?.panel)}>
            {(icon || defaultIcon) && (
              <Icon name={icon || defaultIcon} class={twMerge('mb-2 w-10 h-10', defaultIconClass, itemClasses?.icon)} />
            )}
            <div class={twMerge('text-xl font-bold', titleClass, itemClasses?.title)}>{title}</div>
            {description && (
              <p class={twMerge('text-muted mt-2 flex-grow', descriptionClass, itemClasses?.description)} set:html={description} />
            )}
            {callToAction && (
              <div class="mt-auto pt-4">
                <Button {...callToAction} class="w-full text-center justify-center" />
              </div>
            )}
          </div>
        )
      ))}
    </div>
  )
}
