---
import { Icon } from 'astro-icon/components';
import Logo from '~/components/Logo.astro';
import ToggleTheme from '~/components/common/ToggleTheme.astro';
import ToggleMenu from '~/components/common/ToggleMenu.astro';
import Button from '~/components/ui/Button.astro';

import { getHomePermalink } from '~/utils/permalinks';
import { trimSlash, getAsset } from '~/utils/permalinks';
import type { CallToAction } from '~/types';

interface Link {
  text?: string;
  href?: string;
  ariaLabel?: string;
  icon?: string;
}

interface ActionLink extends CallToAction {}

interface MenuLink extends Link {
  links?: Array<MenuLink>;
}

export interface Props {
  id?: string;
  links?: Array<MenuLink>;
  actions?: Array<ActionLink>;
  isSticky?: boolean;
  isDark?: boolean;
  isFullWidth?: boolean;
  showToggleTheme?: boolean;
  showRssFeed?: boolean;
  position?: string;
}

const {
  id = 'header',
  links = [],
  actions = [],
  isSticky = false,
  isDark = false,
  isFullWidth = false,
  showToggleTheme = false,
  showRssFeed = false,
  position = 'center',
} = Astro.props;

const currentPath = `/${trimSlash(new URL(Astro.url).pathname)}`;
---

<header
  class:list={[
    { sticky: isSticky, relative: !isSticky, dark: isDark },
    'top-0 z-40 flex-none mx-auto w-full border-b border-gray-50/0 transition-[opacity] ease-in-out',
  ]}
  {...isSticky ? { 'data-aw-sticky-header': true } : {}}
  {...id ? { id } : {}}
>
  <div class="absolute inset-0"></div>
  <div
    class:list={[
      'relative text-default px-3 md:px-6 mx-auto bg-white dark:bg-gray-900',
      {
        'max-w-7xl': !isFullWidth,
        'md:flex md:justify-between': position !== 'center',
        'md:grid md:grid-cols-[1fr_auto_1fr] md:items-center': position === 'center',
      },
    ]}
  >
    <div class:list={[{ 'mr-auto rtl:mr-0 rtl:ml-auto': position === 'right' }, 'flex justify-between md:w-auto']}>
      <a class="flex items-center" href={getHomePermalink()}>
        <Logo />
      </a>
      <div class="flex items-center md:hidden">
        <ToggleMenu />
      </div>
    </div>
    <nav
      class="items-center w-full md:w-auto hidden md:flex text-default md:overflow-visible md:justify-center"
      aria-label="Main navigation"
    >
      <ul
        class="flex flex-col md:flex-row md:self-center w-full md:w-auto text-xl md:text-[0.9375rem] tracking-[0.01rem] font-medium md:items-center md:gap-2"
      >
        {
          links.map(({ text, href, links }) => (
            <li class={links?.length ? 'dropdown relative group' : ''}>
              {links?.length ? (
                <>
                  <button type="button" class="hover:text-[#6CC799] transition-colors duration-200 px-4 py-3 flex items-center rounded-md">
                    {text}{' '}
                    <Icon name="tabler:chevron-down" class="w-3.5 h-3.5 ml-0.5 rtl:ml-0 rtl:mr-0.5 hidden md:inline transition-transform duration-200 group-hover:rotate-180" />
                  </button>
                  <ul class="dropdown-menu md:absolute md:flex-col md:min-w-[220px] md:max-h-[85vh] md:overflow-y-auto 
                    bg-white dark:bg-slate-900 pl-4 md:pl-0 md:hidden group-hover:md:block rounded-xl
                    md:shadow-lg md:mt-2 border border-gray-100 dark:border-gray-800
                    transform origin-top-right transition-all duration-200 ease-out">
                    {links.map(({ text: text2, href: href2 }) => (
                      <li>
                        <a
                          class:list={[
                            'block py-2.5 px-6 hover:bg-gray-50 dark:hover:bg-gray-800 hover:text-[#6CC799] transition-colors duration-200',
                            { 'text-[#6CC799]': href2 === currentPath },
                          ]}
                          href={href2}
                        >
                          {text2}
                        </a>
                      </li>
                    ))}
                  </ul>
                </>
              ) : (
                <a
                  class:list={[
                    'hover:text-[#6CC799] dark:hover:text-white px-4 py-3 flex items-center transition-colors duration-200 rounded-md',
                    { 'text-[#6CC799]': href === currentPath },
                  ]}
                  href={href}
                >
                  {text}
                </a>
              )}
            </li>
          ))
        }
      </ul>
    </nav>
    <div
      class:list={[
        { 'ml-auto rtl:ml-0 rtl:mr-auto': position === 'left' },
        'hidden md:flex items-center md:mb-0 fixed w-full md:w-auto md:static justify-end left-0 rtl:left-auto rtl:right-0 bottom-0 p-3 md:p-0',
      ]}
    >
      <div class="items-center flex justify-between w-full md:w-auto">
        <div class="flex">
          {showToggleTheme && <ToggleTheme iconClass="w-6 h-6 md:w-5 md:h-5 md:inline-block" />}
          {
            showRssFeed && (
              <a
                class="text-muted dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm p-2.5 inline-flex items-center "
                aria-label="RSS Feed"
                href={getAsset('/rss.xml')}
              >
                <Icon name="tabler:rss" class="w-5 h-5" />
              </a>
            )
          }
        </div>
        {
          actions?.length ? (
            <span class="ml-4 rtl:ml-0 rtl:mr-4 inline-flex items-center gap-3">
              {actions.map((btnProps) => (
                <Button {...btnProps} class="rounded-full py-2.5 px-6 font-medium text-sm w-auto text-white bg-[#6CC799] hover:bg-[#5AB486] transition-colors duration-200" />
              ))}
              <Button 
                text="404-806-9799" 
                href="tel:404-806-9799" 
                class="rounded-full py-2.5 px-6 font-medium text-sm w-auto text-white bg-[#6CC799] hover:bg-[#5AB486] transition-colors duration-200" 
              />
            </span>
          ) : (
            ''
          )
        }
      </div>
    </div>
  </div>
</header>
